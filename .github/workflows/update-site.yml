name: Build and deploy website

on:
  # Run nightly at 2 AM UTC
  schedule:
    - cron: '0 2 * * *'

  # Allow manual triggering
  workflow_dispatch:

  # Run on pushes to main branch
  push:
    branches: [ main, master ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      ZOTERO_USER_ID: ${{ secrets.ZOTERO_USER_ID }}
      ZOTERO_API_KEY: ${{ secrets.ZOTERO_API_KEY }}
      ZOTERO_COLLECTION_KEY: ${{ secrets.ZOTERO_COLLECTION_KEY }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Pandoc
        uses: r-lib/actions/setup-pandoc@v2
        with:
          pandoc-version: '3.1.11'

      - name: Set up Quarto
        uses: quarto-dev/quarto-actions/setup@v2
        with:
          version: release
          tinytex: true

      - name: Cache TinyTeX
        uses: actions/cache@v4
        with:
          path: ~/.TinyTeX
          key: ${{ runner.os }}-tinytex-2024
          restore-keys: |
            ${{ runner.os }}-tinytex-

      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: '4.4.0'
          use-public-rspm: true

      - name: Restore R packages cache
        id: cache-renv
        uses: actions/cache/restore@v4
        with:
          path: |
            ~/.local/share/renv
            ~/.cache/R/renv
          key: ${{ runner.os }}-renv-${{ hashFiles('**/renv.lock') }}
          restore-keys: |
            ${{ runner.os }}-renv-

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libcurl4-openssl-dev \
            libssl-dev \
            libxml2-dev \
            libfontconfig1-dev

      - name: Restore renv environment
        run: |
          install.packages("renv", repos = "https://cloud.r-project.org/")
          renv::restore(prompt = FALSE)
        shell: Rscript {0}
        env:
          RENV_PATHS_ROOT: ~/.local/share/renv

      - name: Save R packages cache
        if: steps.cache-renv.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: |
            ~/.local/share/renv
            ~/.cache/R/renv
          key: ${{ steps.cache-renv.outputs.cache-primary-key }}

      - name: Verify secrets (without exposing values)
        run: |
          if [ -z "$ZOTERO_USER_ID" ]; then echo "❌ ZOTERO_USER_ID not set"; exit 1; fi
          if [ -z "$ZOTERO_API_KEY" ]; then echo "❌ ZOTERO_API_KEY not set"; exit 1; fi
          if [ -z "$ZOTERO_COLLECTION_KEY" ]; then echo "❌ ZOTERO_COLLECTION_KEY not set"; exit 1; fi
          echo "✅ All Zotero secrets are configured"

      - name: Render main page
        run: |
          quarto render index.qmd

      - name: Render publications page
        run: |
          quarto render publications.qmd

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
